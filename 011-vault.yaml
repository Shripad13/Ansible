- name: Printing secrets
  hosts: all                        # hosts group name
  vars:
    DBPASS: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          31386461383666323130623431393734626434363832353762356662643634616136346532313162
          3662626166643063363761393834663439396538626365340a323963653064326439363961633865
          32663665333638376666376165333737373633396230373334656437343435383230653039633366
          3362316663633563630a396365346438313832356536323763616136306163383232326334646531
          3236  
    #DBPASS: "DevOps123"             # Encrypt & mention here

  tasks:
    - name: Printing Secrets
      ansible.builtin.debug:
        msg: "value of the  pass is {{ DBPASS }}"  # print the DB password using the variable DBPASS, which is defined in the vars section.
      #no_log: true  # This will prevent the sensitive information from being logged in the output.
      
    - name: Printing secret file content
      ansible.builtin.debug:
        msg: "{{ lookup('file', 'secret.txt') }}"  # Using lookup to read the content of a file named secret.txt.
      #no_log: true  # This will prevent the sensitive information from being logged in the output.


# ansible-vault encrypt_string 'DevOps123' --name 'DBPASS'  # To encrypt a single variable
# ansible-vault encrypt secret.txt  # To encrypt the file
# ansible-vault decrypt secret.txt  # To decrypt the file
# Ansible vault is to encrypt sensitive data like passwords, API keys, etc., within Ansible playbooks or files.


# Command to run the vault file -
# ansible-playbook -i localhost, -e ansible_user=ec2-user -e ansible_password=DevOps321 011-vault.yaml --ask-vault-password

