- name: Configuring hostname
  ansible.builtin.shell: set-hostname {{ COMPONENT }}-{{ ENV }}
  
- name: disabling the default module nodejs version
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enabling the module nodejs version 20
  ansible.builtin.shell: dnf module enable nodejs:20 -y

- name: Installing nodejs 
  ansible.builtin.package:
    name: nodejs
    state: present

- name: Add application user on remote {{ COMPONENT }} mysql-server
  ansible.builtin.user:
    name: expense
    state: present


- name: Copying {{COMPONENT}} systemd file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/{{COMPONENT}}.service

- name: App Pre-requisite Tasks
  ansible.builtin.include_role:           # through this we can call any role inside another role
    name: common                          # Name of the role to be called
    tasks_from: pre-req               # Name of the file to be called inside the role



- name: Installing mysql-server client
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: Install Pre-req packages for mysql_db
  ansible.builtin.pip:
    name: 
      - PyMySQL
      - cryptography                             # Dependency packages for community.mysql.mysql_db
    executable: pip3.11 

- name: Generating npm modules
  community.general.npm:
    path: "{{ APP_PATH }}"

- name: Inject /Load the mysql schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_user: root
    login_password: ExpenseApp@1
    #login_password: "{{PWD}}"
    login_host: mysql-{{ENV}}.devsecopswithshri.site



- name: ReStarting "{{COMPONENT}}-{{ENV}}" service
  ansible.builtin.systemd_service:
    name: "{{COMPONENT}}"
    state: restarted
    enabled: true
    daemon_reload: yes
